// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getDelta
arma::vec getDelta(arma::mat gamma, int m);
RcppExport SEXP MSGARCH_getDelta(SEXP gammaSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(getDelta(gamma, m));
    return rcpp_result_gen;
END_RCPP
}
// Viterbi
arma::vec Viterbi(arma::mat mLLK, arma::mat mGamma, int iK);
RcppExport SEXP MSGARCH_Viterbi(SEXP mLLKSEXP, SEXP mGammaSEXP, SEXP iKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mLLK(mLLKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    rcpp_result_gen = Rcpp::wrap(Viterbi(mLLK, mGamma, iK));
    return rcpp_result_gen;
END_RCPP
}
// EM_HMM
List EM_HMM(arma::vec vY, int K, int maxIter, double tol, bool constraintZero);
RcppExport SEXP MSGARCH_EM_HMM(SEXP vYSEXP, SEXP KSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP constraintZeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type constraintZero(constraintZeroSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_HMM(vY, K, maxIter, tol, constraintZero));
    return rcpp_result_gen;
END_RCPP
}
// EM_MM
List EM_MM(arma::vec vY, int K, int maxIter, double tol, bool constraintZero);
RcppExport SEXP MSGARCH_EM_MM(SEXP vYSEXP, SEXP KSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP constraintZeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type constraintZero(constraintZeroSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MM(vY, K, maxIter, tol, constraintZero));
    return rcpp_result_gen;
END_RCPP
}
// MapParameters_univ
arma::vec MapParameters_univ(arma::vec vTheta_tilde, std::string Dist, bool bSkew);
RcppExport SEXP MSGARCH_MapParameters_univ(SEXP vTheta_tildeSEXP, SEXP DistSEXP, SEXP bSkewSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vTheta_tilde(vTheta_tildeSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< bool >::type bSkew(bSkewSEXP);
    rcpp_result_gen = Rcpp::wrap(MapParameters_univ(vTheta_tilde, Dist, bSkew));
    return rcpp_result_gen;
END_RCPP
}
// UnmapParameters_univ
arma::vec UnmapParameters_univ(arma::vec vTheta, std::string Dist, bool bSkew);
RcppExport SEXP MSGARCH_UnmapParameters_univ(SEXP vThetaSEXP, SEXP DistSEXP, SEXP bSkewSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vTheta(vThetaSEXP);
    Rcpp::traits::input_parameter< std::string >::type Dist(DistSEXP);
    Rcpp::traits::input_parameter< bool >::type bSkew(bSkewSEXP);
    rcpp_result_gen = Rcpp::wrap(UnmapParameters_univ(vTheta, Dist, bSkew));
    return rcpp_result_gen;
END_RCPP
}
// dUnivLike
double dUnivLike(arma::vec vZ, std::string sDist, bool bSkew, double dXi, double dNu);
RcppExport SEXP MSGARCH_dUnivLike(SEXP vZSEXP, SEXP sDistSEXP, SEXP bSkewSEXP, SEXP dXiSEXP, SEXP dNuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vZ(vZSEXP);
    Rcpp::traits::input_parameter< std::string >::type sDist(sDistSEXP);
    Rcpp::traits::input_parameter< bool >::type bSkew(bSkewSEXP);
    Rcpp::traits::input_parameter< double >::type dXi(dXiSEXP);
    Rcpp::traits::input_parameter< double >::type dNu(dNuSEXP);
    rcpp_result_gen = Rcpp::wrap(dUnivLike(vZ, sDist, bSkew, dXi, dNu));
    return rcpp_result_gen;
END_RCPP
}
